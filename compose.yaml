# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: ./
      dockerfile: Dockerfile
    command: go run ./src/main.go
    ports:
      - '4000:4000'
      - '8080:80'
    environment:
      - DB_CONN_STRING=postgres://postgres:anginex@db:5432/postgres?sslmode=disable
    develop:
      watch:
        - action: sync+restart
          path: ./
          target: /app
    extra_hosts:
      - "host.docker.internal:host-gateway"

  db:
    image: timescale/timescaledb:latest-pg15
    command: postgres -c shared_preload_libraries=timescaledb
    user: "postgres"
    environment:
      - PGDATA=/var/lib/postgresql/data/timescaledb
      - POSTGRES_USER=postgres
      - PGUSER=postgres
      - POSTGRES_PASSWORD=anginex
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
